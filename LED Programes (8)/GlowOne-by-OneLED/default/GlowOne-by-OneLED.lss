
GlowOne-by-OneLED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000001cd  00000000  00000000  000001ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000fb  00000000  00000000  000003ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000197  00000000  00000000  000004b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000eb  00000000  00000000  0000066c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000090  00000000  00000000  00000757  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  000007e7  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e5       	ldi	r30, 0x5E	; 94
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 ad 00 	jmp	0x15a	; 0x15a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	62 97       	sbiw	r28, 0x12	; 18
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
	int i,a[9]={1,2,4,8,16,32,64,128};
  aa:	fe 01       	movw	r30, r28
  ac:	31 96       	adiw	r30, 0x01	; 1
  ae:	82 e1       	ldi	r24, 0x12	; 18
  b0:	df 01       	movw	r26, r30
  b2:	1d 92       	st	X+, r1
  b4:	8a 95       	dec	r24
  b6:	e9 f7       	brne	.-6      	; 0xb2 <main+0x20>
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	9a 83       	std	Y+2, r25	; 0x02
  be:	89 83       	std	Y+1, r24	; 0x01
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	9c 83       	std	Y+4, r25	; 0x04
  c6:	8b 83       	std	Y+3, r24	; 0x03
  c8:	84 e0       	ldi	r24, 0x04	; 4
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	9e 83       	std	Y+6, r25	; 0x06
  ce:	8d 83       	std	Y+5, r24	; 0x05
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	98 87       	std	Y+8, r25	; 0x08
  d6:	8f 83       	std	Y+7, r24	; 0x07
  d8:	80 e1       	ldi	r24, 0x10	; 16
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	9a 87       	std	Y+10, r25	; 0x0a
  de:	89 87       	std	Y+9, r24	; 0x09
  e0:	80 e2       	ldi	r24, 0x20	; 32
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	9c 87       	std	Y+12, r25	; 0x0c
  e6:	8b 87       	std	Y+11, r24	; 0x0b
  e8:	80 e4       	ldi	r24, 0x40	; 64
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	9e 87       	std	Y+14, r25	; 0x0e
  ee:	8d 87       	std	Y+13, r24	; 0x0d
  f0:	80 e8       	ldi	r24, 0x80	; 128
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	98 8b       	std	Y+16, r25	; 0x10
  f6:	8f 87       	std	Y+15, r24	; 0x0f
	DDRC=0XFF;
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	84 bb       	out	0x14, r24	; 20
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
	while(1)
	{
		for(i=0;i<8;i++)
		{
			PORTC=a[i];
 100:	8f 01       	movw	r16, r30
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 102:	48 ea       	ldi	r20, 0xA8	; 168
 104:	51 e6       	ldi	r21, 0x61	; 97
{
	int i,a[9]={1,2,4,8,16,32,64,128};
	DDRC=0XFF;
	while(1)
	{
		for(i=0;i<8;i++)
 106:	de 01       	movw	r26, r28
 108:	1f 96       	adiw	r26, 0x0f	; 15
			_delay_ms(100);
			PORTC=0X00;
			_delay_ms(100);
		}
		
		for(i=7;i>=0;i--)
 10a:	be 01       	movw	r22, r28
 10c:	61 50       	subi	r22, 0x01	; 1
 10e:	70 40       	sbci	r23, 0x00	; 0
 110:	10 c0       	rjmp	.+32     	; 0x132 <main+0xa0>
	DDRC=0XFF;
	while(1)
	{
		for(i=0;i<8;i++)
		{
			PORTC=a[i];
 112:	f9 01       	movw	r30, r18
 114:	ee 0f       	add	r30, r30
 116:	ff 1f       	adc	r31, r31
 118:	e0 0f       	add	r30, r16
 11a:	f1 1f       	adc	r31, r17
 11c:	80 81       	ld	r24, Z
 11e:	85 bb       	out	0x15, r24	; 21
 120:	ca 01       	movw	r24, r20
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <main+0x90>
			_delay_ms(100);
			PORTC=0X00;
 126:	15 ba       	out	0x15, r1	; 21
 128:	ca 01       	movw	r24, r20
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0x98>
{
	int i,a[9]={1,2,4,8,16,32,64,128};
	DDRC=0XFF;
	while(1)
	{
		for(i=0;i<8;i++)
 12e:	2f 5f       	subi	r18, 0xFF	; 255
 130:	3f 4f       	sbci	r19, 0xFF	; 255
 132:	28 30       	cpi	r18, 0x08	; 8
 134:	31 05       	cpc	r19, r1
 136:	6c f3       	brlt	.-38     	; 0x112 <main+0x80>
 138:	fd 01       	movw	r30, r26
			_delay_ms(100);
		}
		
		for(i=7;i>=0;i--)
		{
			PORTC=a[i];
 13a:	80 81       	ld	r24, Z
 13c:	85 bb       	out	0x15, r24	; 21
 13e:	ca 01       	movw	r24, r20
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0xae>
			_delay_ms(100);
			PORTC=0X00;
 144:	15 ba       	out	0x15, r1	; 21
 146:	ca 01       	movw	r24, r20
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0xb6>
 14c:	32 97       	sbiw	r30, 0x02	; 2
			_delay_ms(100);
			PORTC=0X00;
			_delay_ms(100);
		}
		
		for(i=7;i>=0;i--)
 14e:	e6 17       	cp	r30, r22
 150:	f7 07       	cpc	r31, r23
 152:	99 f7       	brne	.-26     	; 0x13a <main+0xa8>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	ec cf       	rjmp	.-40     	; 0x132 <main+0xa0>

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
