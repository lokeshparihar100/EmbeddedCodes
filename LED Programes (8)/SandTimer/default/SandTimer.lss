
SandTimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000002a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000013b  00000000  00000000  000002bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000da  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000013c  00000000  00000000  000004d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000610  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000db  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000050  00000000  00000000  0000070b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  0000075b  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 15 01 	jmp	0x22a	; 0x22a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	c0 55       	subi	r28, 0x50	; 80
  9c:	d0 40       	sbci	r29, 0x00	; 0
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	f8 94       	cli
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	0f be       	out	0x3f, r0	; 63
  a6:	cd bf       	out	0x3d, r28	; 61
	DDRC=0XFF;
  a8:	8f ef       	ldi	r24, 0xFF	; 255
  aa:	84 bb       	out	0x14, r24	; 20
	int a[40]={1,2,4,8,16,32,64,128,0x81,0x82,0x84,0x88,0x90,0xA0,0xC0,0xC1,0xC2,0xC4,0xC8,0xD0,0xE0,0xE1,0xE2,0xE4,0xE8,0xF0,0xF1,0xF2,0xF4,0xF8,0xF9,0xFA,0xFC,0xFD,0xFE,0xFF};
  ac:	de 01       	movw	r26, r28
  ae:	11 96       	adiw	r26, 0x01	; 1
  b0:	80 e5       	ldi	r24, 0x50	; 80
  b2:	fd 01       	movw	r30, r26
  b4:	11 92       	st	Z+, r1
  b6:	8a 95       	dec	r24
  b8:	e9 f7       	brne	.-6      	; 0xb4 <main+0x22>
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	9a 83       	std	Y+2, r25	; 0x02
  c0:	89 83       	std	Y+1, r24	; 0x01
  c2:	82 e0       	ldi	r24, 0x02	; 2
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	9c 83       	std	Y+4, r25	; 0x04
  c8:	8b 83       	std	Y+3, r24	; 0x03
  ca:	84 e0       	ldi	r24, 0x04	; 4
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	9e 83       	std	Y+6, r25	; 0x06
  d0:	8d 83       	std	Y+5, r24	; 0x05
  d2:	88 e0       	ldi	r24, 0x08	; 8
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	98 87       	std	Y+8, r25	; 0x08
  d8:	8f 83       	std	Y+7, r24	; 0x07
  da:	80 e1       	ldi	r24, 0x10	; 16
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	9a 87       	std	Y+10, r25	; 0x0a
  e0:	89 87       	std	Y+9, r24	; 0x09
  e2:	80 e2       	ldi	r24, 0x20	; 32
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	9c 87       	std	Y+12, r25	; 0x0c
  e8:	8b 87       	std	Y+11, r24	; 0x0b
  ea:	80 e4       	ldi	r24, 0x40	; 64
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	9e 87       	std	Y+14, r25	; 0x0e
  f0:	8d 87       	std	Y+13, r24	; 0x0d
  f2:	80 e8       	ldi	r24, 0x80	; 128
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	98 8b       	std	Y+16, r25	; 0x10
  f8:	8f 87       	std	Y+15, r24	; 0x0f
  fa:	81 e8       	ldi	r24, 0x81	; 129
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	9a 8b       	std	Y+18, r25	; 0x12
 100:	89 8b       	std	Y+17, r24	; 0x11
 102:	82 e8       	ldi	r24, 0x82	; 130
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	9c 8b       	std	Y+20, r25	; 0x14
 108:	8b 8b       	std	Y+19, r24	; 0x13
 10a:	84 e8       	ldi	r24, 0x84	; 132
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	9e 8b       	std	Y+22, r25	; 0x16
 110:	8d 8b       	std	Y+21, r24	; 0x15
 112:	88 e8       	ldi	r24, 0x88	; 136
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	98 8f       	std	Y+24, r25	; 0x18
 118:	8f 8b       	std	Y+23, r24	; 0x17
 11a:	80 e9       	ldi	r24, 0x90	; 144
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	9a 8f       	std	Y+26, r25	; 0x1a
 120:	89 8f       	std	Y+25, r24	; 0x19
 122:	80 ea       	ldi	r24, 0xA0	; 160
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	9c 8f       	std	Y+28, r25	; 0x1c
 128:	8b 8f       	std	Y+27, r24	; 0x1b
 12a:	80 ec       	ldi	r24, 0xC0	; 192
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	9e 8f       	std	Y+30, r25	; 0x1e
 130:	8d 8f       	std	Y+29, r24	; 0x1d
 132:	81 ec       	ldi	r24, 0xC1	; 193
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	98 a3       	std	Y+32, r25	; 0x20
 138:	8f 8f       	std	Y+31, r24	; 0x1f
 13a:	82 ec       	ldi	r24, 0xC2	; 194
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	9a a3       	std	Y+34, r25	; 0x22
 140:	89 a3       	std	Y+33, r24	; 0x21
 142:	84 ec       	ldi	r24, 0xC4	; 196
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	9c a3       	std	Y+36, r25	; 0x24
 148:	8b a3       	std	Y+35, r24	; 0x23
 14a:	88 ec       	ldi	r24, 0xC8	; 200
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	9e a3       	std	Y+38, r25	; 0x26
 150:	8d a3       	std	Y+37, r24	; 0x25
 152:	80 ed       	ldi	r24, 0xD0	; 208
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	98 a7       	std	Y+40, r25	; 0x28
 158:	8f a3       	std	Y+39, r24	; 0x27
 15a:	80 ee       	ldi	r24, 0xE0	; 224
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	9a a7       	std	Y+42, r25	; 0x2a
 160:	89 a7       	std	Y+41, r24	; 0x29
 162:	81 ee       	ldi	r24, 0xE1	; 225
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	9c a7       	std	Y+44, r25	; 0x2c
 168:	8b a7       	std	Y+43, r24	; 0x2b
 16a:	82 ee       	ldi	r24, 0xE2	; 226
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	9e a7       	std	Y+46, r25	; 0x2e
 170:	8d a7       	std	Y+45, r24	; 0x2d
 172:	84 ee       	ldi	r24, 0xE4	; 228
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	98 ab       	std	Y+48, r25	; 0x30
 178:	8f a7       	std	Y+47, r24	; 0x2f
 17a:	88 ee       	ldi	r24, 0xE8	; 232
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	9a ab       	std	Y+50, r25	; 0x32
 180:	89 ab       	std	Y+49, r24	; 0x31
 182:	80 ef       	ldi	r24, 0xF0	; 240
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	9c ab       	std	Y+52, r25	; 0x34
 188:	8b ab       	std	Y+51, r24	; 0x33
 18a:	81 ef       	ldi	r24, 0xF1	; 241
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	9e ab       	std	Y+54, r25	; 0x36
 190:	8d ab       	std	Y+53, r24	; 0x35
 192:	82 ef       	ldi	r24, 0xF2	; 242
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	98 af       	std	Y+56, r25	; 0x38
 198:	8f ab       	std	Y+55, r24	; 0x37
 19a:	84 ef       	ldi	r24, 0xF4	; 244
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	9a af       	std	Y+58, r25	; 0x3a
 1a0:	89 af       	std	Y+57, r24	; 0x39
 1a2:	88 ef       	ldi	r24, 0xF8	; 248
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	9c af       	std	Y+60, r25	; 0x3c
 1a8:	8b af       	std	Y+59, r24	; 0x3b
 1aa:	89 ef       	ldi	r24, 0xF9	; 249
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	9e af       	std	Y+62, r25	; 0x3e
 1b0:	8d af       	std	Y+61, r24	; 0x3d
 1b2:	fe 01       	movw	r30, r28
 1b4:	ff 96       	adiw	r30, 0x3f	; 63
 1b6:	8a ef       	ldi	r24, 0xFA	; 250
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	91 83       	std	Z+1, r25	; 0x01
 1bc:	80 83       	st	Z, r24
 1be:	8c ef       	ldi	r24, 0xFC	; 252
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	fe 01       	movw	r30, r28
 1c4:	ef 5b       	subi	r30, 0xBF	; 191
 1c6:	ff 4f       	sbci	r31, 0xFF	; 255
 1c8:	91 83       	std	Z+1, r25	; 0x01
 1ca:	80 83       	st	Z, r24
 1cc:	8d ef       	ldi	r24, 0xFD	; 253
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	fe 01       	movw	r30, r28
 1d2:	ed 5b       	subi	r30, 0xBD	; 189
 1d4:	ff 4f       	sbci	r31, 0xFF	; 255
 1d6:	91 83       	std	Z+1, r25	; 0x01
 1d8:	80 83       	st	Z, r24
 1da:	8e ef       	ldi	r24, 0xFE	; 254
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	fe 01       	movw	r30, r28
 1e0:	eb 5b       	subi	r30, 0xBB	; 187
 1e2:	ff 4f       	sbci	r31, 0xFF	; 255
 1e4:	91 83       	std	Z+1, r25	; 0x01
 1e6:	80 83       	st	Z, r24
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	fe 01       	movw	r30, r28
 1ee:	e9 5b       	subi	r30, 0xB9	; 185
 1f0:	ff 4f       	sbci	r31, 0xFF	; 255
 1f2:	91 83       	std	Z+1, r25	; 0x01
 1f4:	80 83       	st	Z, r24
 1f6:	20 e0       	ldi	r18, 0x00	; 0
 1f8:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1fa:	49 e1       	ldi	r20, 0x19	; 25
 1fc:	50 e0       	ldi	r21, 0x00	; 0
	int i;

	while(1)
	for(i=0;i<38;i++)
	{
		PORTC=a[i];
 1fe:	f9 01       	movw	r30, r18
 200:	ee 0f       	add	r30, r30
 202:	ff 1f       	adc	r31, r31
 204:	ea 0f       	add	r30, r26
 206:	fb 1f       	adc	r31, r27
 208:	80 81       	ld	r24, Z
 20a:	85 bb       	out	0x15, r24	; 21
 20c:	80 ea       	ldi	r24, 0xA0	; 160
 20e:	9f e0       	ldi	r25, 0x0F	; 15
 210:	fa 01       	movw	r30, r20
 212:	31 97       	sbiw	r30, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <main+0x180>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 216:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 218:	d9 f7       	brne	.-10     	; 0x210 <main+0x17e>
//  int d[6]={0xE1,0xE2,0xE4,0xE8,0xF0};
//  e[5]={0xF1,0xF2,0xF4,0xF8}
	int i;

	while(1)
	for(i=0;i<38;i++)
 21a:	2f 5f       	subi	r18, 0xFF	; 255
 21c:	3f 4f       	sbci	r19, 0xFF	; 255
 21e:	26 32       	cpi	r18, 0x26	; 38
 220:	31 05       	cpc	r19, r1
 222:	6c f3       	brlt	.-38     	; 0x1fe <main+0x16c>
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	ea cf       	rjmp	.-44     	; 0x1fe <main+0x16c>

0000022a <_exit>:
 22a:	f8 94       	cli

0000022c <__stop_program>:
 22c:	ff cf       	rjmp	.-2      	; 0x22c <__stop_program>
