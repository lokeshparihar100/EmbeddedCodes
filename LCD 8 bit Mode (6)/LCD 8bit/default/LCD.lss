
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000212  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000032  00000000  00000000  00000232  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000006c8  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000ff  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000003fc  00000000  00000000  00000a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000e28  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000de  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001a6  00000000  00000000  00000f46  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee eb       	ldi	r30, 0xBE	; 190
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
void lcdcmd(char cmd);
void lcddata(char data);


void main()
{
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	84 bb       	out	0x14, r24	; 20
	DDRC=0XFF;
	DDRD=0XFF;
  96:	81 bb       	out	0x11, r24	; 17

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  98:	62 e0       	ldi	r22, 0x02	; 2
  9a:	62 bb       	out	0x12, r22	; 18
	PORTC=0b00001000;
  9c:	98 e0       	ldi	r25, 0x08	; 8
  9e:	95 bb       	out	0x15, r25	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a0:	28 ea       	ldi	r18, 0xA8	; 168
  a2:	31 e6       	ldi	r19, 0x61	; 97
  a4:	f9 01       	movw	r30, r18
  a6:	31 97       	sbiw	r30, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x14>
	_delay_ms(100);

	PORTC=0X00;
  aa:	15 ba       	out	0x15, r1	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  ac:	88 e3       	ldi	r24, 0x38	; 56
  ae:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
  b0:	95 bb       	out	0x15, r25	; 21
  b2:	f9 01       	movw	r30, r18
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x22>
	_delay_ms(100);

	PORTC=0X00;
  b8:	15 ba       	out	0x15, r1	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  ba:	86 e0       	ldi	r24, 0x06	; 6
  bc:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
  be:	95 bb       	out	0x15, r25	; 21
  c0:	f9 01       	movw	r30, r18
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x30>
	_delay_ms(100);

	PORTC=0X00;
  c6:	15 ba       	out	0x15, r1	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  c8:	84 e0       	ldi	r24, 0x04	; 4
  ca:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
  cc:	95 bb       	out	0x15, r25	; 21
  ce:	f9 01       	movw	r30, r18
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x3e>
	_delay_ms(100);

	PORTC=0X00;
  d4:	15 ba       	out	0x15, r1	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  d6:	8c e0       	ldi	r24, 0x0C	; 12
  d8:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
  da:	95 bb       	out	0x15, r25	; 21
  dc:	f9 01       	movw	r30, r18
  de:	31 97       	sbiw	r30, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x4c>
	_delay_ms(100);

	PORTC=0X00;
  e2:	15 ba       	out	0x15, r1	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
  e4:	80 e8       	ldi	r24, 0x80	; 128
  e6:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
  e8:	95 bb       	out	0x15, r25	; 21
  ea:	f9 01       	movw	r30, r18
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <main+0x5a>
	_delay_ms(100);

	PORTC=0X00;
  f0:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
  f2:	8c e4       	ldi	r24, 0x4C	; 76
  f4:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
  f6:	7a e0       	ldi	r23, 0x0A	; 10
  f8:	75 bb       	out	0x15, r23	; 21
  fa:	44 ec       	ldi	r20, 0xC4	; 196
  fc:	59 e0       	ldi	r21, 0x09	; 9
  fe:	fa 01       	movw	r30, r20
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x6e>
	_delay_ms(10);
	PORTC=0b00000010;
 104:	65 bb       	out	0x15, r22	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
 106:	81 e8       	ldi	r24, 0x81	; 129
 108:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
 10a:	95 bb       	out	0x15, r25	; 21
 10c:	f9 01       	movw	r30, r18
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x7c>
	_delay_ms(100);

	PORTC=0X00;
 112:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
 114:	8f e4       	ldi	r24, 0x4F	; 79
 116:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
 118:	75 bb       	out	0x15, r23	; 21
 11a:	fa 01       	movw	r30, r20
 11c:	31 97       	sbiw	r30, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0x8a>
	_delay_ms(10);
	PORTC=0b00000010;
 120:	65 bb       	out	0x15, r22	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
 122:	82 e8       	ldi	r24, 0x82	; 130
 124:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
 126:	95 bb       	out	0x15, r25	; 21
 128:	f9 01       	movw	r30, r18
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0x98>
	_delay_ms(100);

	PORTC=0X00;
 12e:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
 130:	8b e4       	ldi	r24, 0x4B	; 75
 132:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
 134:	75 bb       	out	0x15, r23	; 21
 136:	fa 01       	movw	r30, r20
 138:	31 97       	sbiw	r30, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <main+0xa6>
	_delay_ms(10);
	PORTC=0b00000010;
 13c:	65 bb       	out	0x15, r22	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
 13e:	83 e8       	ldi	r24, 0x83	; 131
 140:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
 142:	95 bb       	out	0x15, r25	; 21
 144:	f9 01       	movw	r30, r18
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0xb4>
	_delay_ms(100);

	PORTC=0X00;
 14a:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
 14c:	85 e4       	ldi	r24, 0x45	; 69
 14e:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
 150:	75 bb       	out	0x15, r23	; 21
 152:	fa 01       	movw	r30, r20
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0xc2>
	_delay_ms(10);
	PORTC=0b00000010;
 158:	65 bb       	out	0x15, r22	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
 15a:	84 e8       	ldi	r24, 0x84	; 132
 15c:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
 15e:	95 bb       	out	0x15, r25	; 21
 160:	f9 01       	movw	r30, r18
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <main+0xd0>
	_delay_ms(100);

	PORTC=0X00;
 166:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
 168:	83 e5       	ldi	r24, 0x53	; 83
 16a:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
 16c:	75 bb       	out	0x15, r23	; 21
 16e:	fa 01       	movw	r30, r20
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <main+0xde>
	_delay_ms(10);
	PORTC=0b00000010;
 174:	65 bb       	out	0x15, r22	; 21

}

void lcdcmd(char cmd)
{
	PORTD=cmd;
 176:	85 e8       	ldi	r24, 0x85	; 133
 178:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001000;
 17a:	95 bb       	out	0x15, r25	; 21
 17c:	c9 01       	movw	r24, r18
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <main+0xec>
	_delay_ms(100);

	PORTC=0X00;
 182:	15 ba       	out	0x15, r1	; 21
}

void lcddata(char data)
{
	PORTD=data;
 184:	88 e4       	ldi	r24, 0x48	; 72
 186:	82 bb       	out	0x12, r24	; 18
	PORTC=0b00001010;
 188:	75 bb       	out	0x15, r23	; 21
 18a:	ca 01       	movw	r24, r20
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0xfa>
	_delay_ms(10);
	PORTC=0b00000010;
 190:	65 bb       	out	0x15, r22	; 21
	lcdcmd(0x85);
	lcddata('H');



}
 192:	08 95       	ret

00000194 <lcdcmd>:

void lcdcmd(char cmd)
{
 194:	82 bb       	out	0x12, r24	; 18
	PORTD=cmd;
	PORTC=0b00001000;
 196:	88 e0       	ldi	r24, 0x08	; 8
 198:	85 bb       	out	0x15, r24	; 21
 19a:	88 ea       	ldi	r24, 0xA8	; 168
 19c:	91 e6       	ldi	r25, 0x61	; 97
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcdcmd+0xa>
	_delay_ms(100);

	PORTC=0X00;
 1a2:	15 ba       	out	0x15, r1	; 21
}
 1a4:	08 95       	ret

000001a6 <lcddata>:

void lcddata(char data)
{
 1a6:	82 bb       	out	0x12, r24	; 18
	PORTD=data;
	PORTC=0b00001010;
 1a8:	8a e0       	ldi	r24, 0x0A	; 10
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	84 ec       	ldi	r24, 0xC4	; 196
 1ae:	99 e0       	ldi	r25, 0x09	; 9
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
	_delay_ms(10);
	PORTC=0b00000010;
 1b4:	82 e0       	ldi	r24, 0x02	; 2
 1b6:	85 bb       	out	0x15, r24	; 21
}
 1b8:	08 95       	ret

000001ba <_exit>:
 1ba:	f8 94       	cli

000001bc <__stop_program>:
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <__stop_program>
