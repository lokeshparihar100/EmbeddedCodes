
Switch+LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000030a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000040  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000069f  00000000  00000000  0000036a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000012d  00000000  00000000  00000a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000050c  00000000  00000000  00000b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  00001044  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000f6  00000000  00000000  00001094  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001d6  00000000  00000000  0000118a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000138  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 88 00 	call	0x110	; 0x110 <main>
  8a:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <lcd_cmd>:
	lcd_cmd(0x28);
	lcd_cmd(0x06);
	lcd_cmd(0x0C);
}
void lcd_cmd(char cmd)
{
  92:	98 2f       	mov	r25, r24
  94:	90 7f       	andi	r25, 0xF0	; 240
  96:	94 60       	ori	r25, 0x04	; 4
  98:	92 bb       	out	0x12, r25	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	24 ec       	ldi	r18, 0xC4	; 196
  9c:	39 e0       	ldi	r19, 0x09	; 9
  9e:	f9 01       	movw	r30, r18
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_cmd+0xe>
	PORTD=(cmd&0xf0)|0x04;
	_delay_ms(10);
	PORTD=PORTD-0x04;
  a4:	92 b3       	in	r25, 0x12	; 18
  a6:	94 50       	subi	r25, 0x04	; 4
  a8:	92 bb       	out	0x12, r25	; 18
	PORTD=((cmd<<4)&0xf0)|0x04;
  aa:	82 95       	swap	r24
  ac:	80 7f       	andi	r24, 0xF0	; 240
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	82 bb       	out	0x12, r24	; 18
  b2:	c9 01       	movw	r24, r18
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <lcd_cmd+0x22>
	_delay_ms(10);
	PORTD=PORTD-0x04;
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	84 50       	subi	r24, 0x04	; 4
  bc:	82 bb       	out	0x12, r24	; 18
}
  be:	08 95       	ret

000000c0 <lcd_ini>:
#include<avr/io.h>
#include<util/delay.h>

void lcd_ini()
{
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x02);
	lcd_cmd(0x28);
  c8:	88 e2       	ldi	r24, 0x28	; 40
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x06);
  d0:	86 e0       	ldi	r24, 0x06	; 6
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x0C);
  d8:	8c e0       	ldi	r24, 0x0C	; 12
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
}
  e0:	08 95       	ret

000000e2 <lcd_data>:
	PORTD=((cmd<<4)&0xf0)|0x04;
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
  e2:	98 2f       	mov	r25, r24
  e4:	90 7f       	andi	r25, 0xF0	; 240
  e6:	95 60       	ori	r25, 0x05	; 5
  e8:	92 bb       	out	0x12, r25	; 18
  ea:	24 ec       	ldi	r18, 0xC4	; 196
  ec:	39 e0       	ldi	r19, 0x09	; 9
  ee:	f9 01       	movw	r30, r18
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <lcd_data+0xe>
	PORTD=(data&0xf0)|0x05;
	_delay_ms(10);
	PORTD=PORTD-0x04;
  f4:	92 b3       	in	r25, 0x12	; 18
  f6:	94 50       	subi	r25, 0x04	; 4
  f8:	92 bb       	out	0x12, r25	; 18
	PORTD=((data<<4)&0xf0)|0x05;
  fa:	82 95       	swap	r24
  fc:	80 7f       	andi	r24, 0xF0	; 240
  fe:	85 60       	ori	r24, 0x05	; 5
 100:	82 bb       	out	0x12, r24	; 18
 102:	c9 01       	movw	r24, r18
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_data+0x22>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 108:	82 b3       	in	r24, 0x12	; 18
 10a:	84 50       	subi	r24, 0x04	; 4
 10c:	82 bb       	out	0x12, r24	; 18
}
 10e:	08 95       	ret

00000110 <main>:

void main()
{
 110:	af 92       	push	r10
 112:	bf 92       	push	r11
 114:	cf 92       	push	r12
 116:	df 92       	push	r13
 118:	ef 92       	push	r14
 11a:	ff 92       	push	r15
 11c:	0f 93       	push	r16
 11e:	1f 93       	push	r17
	DDRD=0xFF;
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	81 bb       	out	0x11, r24	; 17
	DDRC=0X0F;
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	84 bb       	out	0x14, r24	; 20
	
	lcd_ini();
 128:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_ini>
	lcd_cmd(0x06);
	lcd_cmd(0x0C);
}
void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xf0)|0x04;
 12c:	f4 e8       	ldi	r31, 0x84	; 132
 12e:	cf 2e       	mov	r12, r31
 130:	24 ec       	ldi	r18, 0xC4	; 196
 132:	39 e0       	ldi	r19, 0x09	; 9
	_delay_ms(10);
	PORTD=PORTD-0x04;
	PORTD=((cmd<<4)&0xf0)|0x04;
 134:	e4 e5       	ldi	r30, 0x54	; 84
 136:	be 2e       	mov	r11, r30
	
	lcd_ini();
	while(1)
	{
		lcd_cmd(0x85);
PORTC=0b11111110;
 138:	7e ef       	ldi	r23, 0xFE	; 254
 13a:	a7 2e       	mov	r10, r23
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 13c:	45 e3       	ldi	r20, 0x35	; 53
	_delay_ms(10);
	PORTD=PORTD-0x04;
	PORTD=((data<<4)&0xf0)|0x05;
 13e:	05 e1       	ldi	r16, 0x15	; 21
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 140:	55 e2       	ldi	r21, 0x25	; 37
	_delay_ms(10);
	PORTD=PORTD-0x04;
	PORTD=((data<<4)&0xf0)|0x05;
 142:	65 ea       	ldi	r22, 0xA5	; 165
 144:	f6 2e       	mov	r15, r22
	 else if(PINC==0b01111110)
	{	lcd_data('*');
	}


PORTC=0b11111101;
 146:	95 e7       	ldi	r25, 0x75	; 117
 148:	e9 2e       	mov	r14, r25
 14a:	85 e4       	ldi	r24, 0x45	; 69
 14c:	d8 2e       	mov	r13, r24
 14e:	fd ef       	ldi	r31, 0xFD	; 253
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
	_delay_ms(10);
	PORTD=PORTD-0x04;
	PORTD=((data<<4)&0xf0)|0x05;
 150:	a5 e0       	ldi	r26, 0x05	; 5
	 else if(PINC==0b01111101)
	{	lcd_data('0');
	}


PORTC=0b11111011;
 152:	b5 e8       	ldi	r27, 0x85	; 133
 154:	15 e5       	ldi	r17, 0x55	; 85
 156:	6b ef       	ldi	r22, 0xFB	; 251
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
	_delay_ms(10);
	PORTD=PORTD-0x04;
	PORTD=((data<<4)&0xf0)|0x05;
 158:	75 e9       	ldi	r23, 0x95	; 149
	lcd_cmd(0x06);
	lcd_cmd(0x0C);
}
void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xf0)|0x04;
 15a:	e5 e6       	ldi	r30, 0x65	; 101
 15c:	c2 ba       	out	0x12, r12	; 18
 15e:	c9 01       	movw	r24, r18
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0x50>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 164:	82 b3       	in	r24, 0x12	; 18
 166:	84 50       	subi	r24, 0x04	; 4
 168:	82 bb       	out	0x12, r24	; 18
	PORTD=((cmd<<4)&0xf0)|0x04;
 16a:	b2 ba       	out	0x12, r11	; 18
 16c:	c9 01       	movw	r24, r18
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <main+0x5e>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 172:	82 b3       	in	r24, 0x12	; 18
 174:	84 50       	subi	r24, 0x04	; 4
 176:	82 bb       	out	0x12, r24	; 18
	
	lcd_ini();
	while(1)
	{
		lcd_cmd(0x85);
PORTC=0b11111110;
 178:	a5 ba       	out	0x15, r10	; 21

	if(PINC==0b11101110)
 17a:	83 b3       	in	r24, 0x13	; 19
 17c:	8e 3e       	cpi	r24, 0xEE	; 238
 17e:	49 f4       	brne	.+18     	; 0x192 <main+0x82>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 180:	42 bb       	out	0x12, r20	; 18
 182:	c9 01       	movw	r24, r18
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <main+0x74>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 188:	82 b3       	in	r24, 0x12	; 18
 18a:	84 50       	subi	r24, 0x04	; 4
 18c:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 18e:	02 bb       	out	0x12, r16	; 18
 190:	23 c0       	rjmp	.+70     	; 0x1d8 <main+0xc8>
PORTC=0b11111110;

	if(PINC==0b11101110)
	{  lcd_data('1');
	}
	 else if(PINC==0b11011110)
 192:	83 b3       	in	r24, 0x13	; 19
 194:	8e 3d       	cpi	r24, 0xDE	; 222
 196:	49 f4       	brne	.+18     	; 0x1aa <main+0x9a>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 198:	42 bb       	out	0x12, r20	; 18
 19a:	c9 01       	movw	r24, r18
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <main+0x8c>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 1a0:	82 b3       	in	r24, 0x12	; 18
 1a2:	84 50       	subi	r24, 0x04	; 4
 1a4:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 1a6:	d2 ba       	out	0x12, r13	; 18
 1a8:	17 c0       	rjmp	.+46     	; 0x1d8 <main+0xc8>
	{  lcd_data('1');
	}
	 else if(PINC==0b11011110)
	{	lcd_data('4');
	}
	else if(PINC==0b10111110)
 1aa:	83 b3       	in	r24, 0x13	; 19
 1ac:	8e 3b       	cpi	r24, 0xBE	; 190
 1ae:	49 f4       	brne	.+18     	; 0x1c2 <main+0xb2>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 1b0:	42 bb       	out	0x12, r20	; 18
 1b2:	c9 01       	movw	r24, r18
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <main+0xa4>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 1b8:	82 b3       	in	r24, 0x12	; 18
 1ba:	84 50       	subi	r24, 0x04	; 4
 1bc:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 1be:	e2 ba       	out	0x12, r14	; 18
 1c0:	0b c0       	rjmp	.+22     	; 0x1d8 <main+0xc8>
	{	lcd_data('4');
	}
	else if(PINC==0b10111110)
	{	lcd_data('7');
	}
	 else if(PINC==0b01111110)
 1c2:	83 b3       	in	r24, 0x13	; 19
 1c4:	8e 37       	cpi	r24, 0x7E	; 126
 1c6:	71 f4       	brne	.+28     	; 0x1e4 <main+0xd4>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 1c8:	52 bb       	out	0x12, r21	; 18
 1ca:	c9 01       	movw	r24, r18
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0xbc>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 1d0:	82 b3       	in	r24, 0x12	; 18
 1d2:	84 50       	subi	r24, 0x04	; 4
 1d4:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 1d6:	f2 ba       	out	0x12, r15	; 18
 1d8:	c9 01       	movw	r24, r18
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <main+0xca>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 1de:	82 b3       	in	r24, 0x12	; 18
 1e0:	84 50       	subi	r24, 0x04	; 4
 1e2:	82 bb       	out	0x12, r24	; 18
	 else if(PINC==0b01111110)
	{	lcd_data('*');
	}


PORTC=0b11111101;
 1e4:	f5 bb       	out	0x15, r31	; 21

	if(PINC==0b11101101)
 1e6:	83 b3       	in	r24, 0x13	; 19
 1e8:	8d 3e       	cpi	r24, 0xED	; 237
 1ea:	49 f4       	brne	.+18     	; 0x1fe <main+0xee>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 1ec:	42 bb       	out	0x12, r20	; 18
 1ee:	c9 01       	movw	r24, r18
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <main+0xe0>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 1f4:	82 b3       	in	r24, 0x12	; 18
 1f6:	84 50       	subi	r24, 0x04	; 4
 1f8:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 1fa:	52 bb       	out	0x12, r21	; 18
 1fc:	23 c0       	rjmp	.+70     	; 0x244 <main+0x134>
PORTC=0b11111101;

	if(PINC==0b11101101)
	{	lcd_data('2');
	}
	 else if(PINC==0b11011101)
 1fe:	83 b3       	in	r24, 0x13	; 19
 200:	8d 3d       	cpi	r24, 0xDD	; 221
 202:	49 f4       	brne	.+18     	; 0x216 <main+0x106>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 204:	42 bb       	out	0x12, r20	; 18
 206:	c9 01       	movw	r24, r18
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <main+0xf8>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 20c:	82 b3       	in	r24, 0x12	; 18
 20e:	84 50       	subi	r24, 0x04	; 4
 210:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 212:	12 bb       	out	0x12, r17	; 18
 214:	17 c0       	rjmp	.+46     	; 0x244 <main+0x134>
	{	lcd_data('2');
	}
	 else if(PINC==0b11011101)
	{	lcd_data('5');
	}
	else if(PINC==0b10111101)
 216:	83 b3       	in	r24, 0x13	; 19
 218:	8d 3b       	cpi	r24, 0xBD	; 189
 21a:	49 f4       	brne	.+18     	; 0x22e <main+0x11e>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 21c:	42 bb       	out	0x12, r20	; 18
 21e:	c9 01       	movw	r24, r18
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0x110>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 224:	82 b3       	in	r24, 0x12	; 18
 226:	84 50       	subi	r24, 0x04	; 4
 228:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 22a:	b2 bb       	out	0x12, r27	; 18
 22c:	0b c0       	rjmp	.+22     	; 0x244 <main+0x134>
	{	lcd_data('5');
	}
	else if(PINC==0b10111101)
	{	lcd_data('8');
	}
	 else if(PINC==0b01111101)
 22e:	83 b3       	in	r24, 0x13	; 19
 230:	8d 37       	cpi	r24, 0x7D	; 125
 232:	71 f4       	brne	.+28     	; 0x250 <main+0x140>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 234:	42 bb       	out	0x12, r20	; 18
 236:	c9 01       	movw	r24, r18
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x128>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 23c:	82 b3       	in	r24, 0x12	; 18
 23e:	84 50       	subi	r24, 0x04	; 4
 240:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 242:	a2 bb       	out	0x12, r26	; 18
 244:	c9 01       	movw	r24, r18
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <main+0x136>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 24a:	82 b3       	in	r24, 0x12	; 18
 24c:	84 50       	subi	r24, 0x04	; 4
 24e:	82 bb       	out	0x12, r24	; 18
	 else if(PINC==0b01111101)
	{	lcd_data('0');
	}


PORTC=0b11111011;
 250:	65 bb       	out	0x15, r22	; 21

	if(PINC==0b11101011)
 252:	83 b3       	in	r24, 0x13	; 19
 254:	8b 3e       	cpi	r24, 0xEB	; 235
 256:	11 f4       	brne	.+4      	; 0x25c <main+0x14c>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 258:	42 bb       	out	0x12, r20	; 18
 25a:	1d c0       	rjmp	.+58     	; 0x296 <main+0x186>
PORTC=0b11111011;

	if(PINC==0b11101011)
	{	lcd_data('3');
	}
	 else if(PINC==0b11011011)
 25c:	83 b3       	in	r24, 0x13	; 19
 25e:	8b 3d       	cpi	r24, 0xDB	; 219
 260:	49 f4       	brne	.+18     	; 0x274 <main+0x164>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 262:	42 bb       	out	0x12, r20	; 18
 264:	c9 01       	movw	r24, r18
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <main+0x156>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 26a:	82 b3       	in	r24, 0x12	; 18
 26c:	84 50       	subi	r24, 0x04	; 4
 26e:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 270:	e2 bb       	out	0x12, r30	; 18
 272:	18 c0       	rjmp	.+48     	; 0x2a4 <main+0x194>
	{	lcd_data('3');
	}
	 else if(PINC==0b11011011)
	{	lcd_data('6');
	}
	else if(PINC==0b10111011)
 274:	83 b3       	in	r24, 0x13	; 19
 276:	8b 3b       	cpi	r24, 0xBB	; 187
 278:	49 f4       	brne	.+18     	; 0x28c <main+0x17c>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 27a:	42 bb       	out	0x12, r20	; 18
 27c:	c9 01       	movw	r24, r18
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <main+0x16e>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 282:	82 b3       	in	r24, 0x12	; 18
 284:	84 50       	subi	r24, 0x04	; 4
 286:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 288:	72 bb       	out	0x12, r23	; 18
 28a:	0c c0       	rjmp	.+24     	; 0x2a4 <main+0x194>
	{	lcd_data('6');
	}
	else if(PINC==0b10111011)
	{	lcd_data('9');
	}
	 else if(PINC==0b01111011)
 28c:	83 b3       	in	r24, 0x13	; 19
 28e:	8b 37       	cpi	r24, 0x7B	; 123
 290:	09 f0       	breq	.+2      	; 0x294 <main+0x184>
 292:	64 cf       	rjmp	.-312    	; 0x15c <main+0x4c>
	_delay_ms(10);
	PORTD=PORTD-0x04;
}
void lcd_data(char data)
{
	PORTD=(data&0xf0)|0x05;
 294:	52 bb       	out	0x12, r21	; 18
 296:	c9 01       	movw	r24, r18
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <main+0x188>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 29c:	82 b3       	in	r24, 0x12	; 18
 29e:	84 50       	subi	r24, 0x04	; 4
 2a0:	82 bb       	out	0x12, r24	; 18
	PORTD=((data<<4)&0xf0)|0x05;
 2a2:	42 bb       	out	0x12, r20	; 18
 2a4:	c9 01       	movw	r24, r18
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <main+0x196>
	_delay_ms(10);
	PORTD=PORTD-0x04;
 2aa:	82 b3       	in	r24, 0x12	; 18
 2ac:	84 50       	subi	r24, 0x04	; 4
 2ae:	82 bb       	out	0x12, r24	; 18
 2b0:	55 cf       	rjmp	.-342    	; 0x15c <main+0x4c>

000002b2 <_exit>:
 2b2:	f8 94       	cli

000002b4 <__stop_program>:
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <__stop_program>
