
Switch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000200  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000436  00000000  00000000  0000028f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e6  00000000  00000000  000006c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000003e1  00000000  00000000  000007ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d5  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000a70  00000000  00000000  00000c81  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  000016f1  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  92:	af 92       	push	r10
  94:	bf 92       	push	r11
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
	DDRC=0XFF;
  a2:	9f ef       	ldi	r25, 0xFF	; 255
  a4:	94 bb       	out	0x14, r25	; 20
	DDRD=0X0F;
  a6:	8f e0       	ldi	r24, 0x0F	; 15
  a8:	81 bb       	out	0x11, r24	; 17
	PORTC=0XFF;
  aa:	95 bb       	out	0x15, r25	; 21
	while(1)
	{

PORTD=0b11111110;
  ac:	7e ef       	ldi	r23, 0xFE	; 254
  ae:	a7 2e       	mov	r10, r23

	if(PIND==0b11101110)
	{  
	PORTC=0b01111001;
  b0:	69 e7       	ldi	r22, 0x79	; 121
  b2:	c6 2e       	mov	r12, r22
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  b4:	29 e1       	ldi	r18, 0x19	; 25
  b6:	30 e0       	ldi	r19, 0x00	; 0
	_delay_ms(1000);}
	else if(PIND==0b10111110)
{	PORTC=0b01111000;
	_delay_ms(1000);}
	 else if(PIND==0b01111110)
{	PORTC=0b00110110;
  b8:	56 e3       	ldi	r21, 0x36	; 54
  ba:	b5 2e       	mov	r11, r21
	_delay_ms(1000);}
	 else if(PIND==0b11011110)
	{PORTC=0b00011001;
	_delay_ms(1000);}
	else if(PIND==0b10111110)
{	PORTC=0b01111000;
  bc:	48 e7       	ldi	r20, 0x78	; 120
  be:	e4 2e       	mov	r14, r20
	if(PIND==0b11101110)
	{  
	PORTC=0b01111001;
	_delay_ms(1000);}
	 else if(PIND==0b11011110)
	{PORTC=0b00011001;
  c0:	99 e1       	ldi	r25, 0x19	; 25
  c2:	d9 2e       	mov	r13, r25
	 else if(PIND==0b01111110)
{	PORTC=0b00110110;
	_delay_ms(1000);}


	PORTD=0b11111101;
  c4:	0d ef       	ldi	r16, 0xFD	; 253
	_delay_ms(1000);}
	else if(PIND==0b10111101)
{	PORTC=0b00000000;
	_delay_ms(1000);}
	 else if(PIND==0b01111101)
{	PORTC=64;
  c6:	80 e4       	ldi	r24, 0x40	; 64
  c8:	f8 2e       	mov	r15, r24

	if(PIND==0b11101101)
{	PORTC=0b00100100;
	_delay_ms(1000);}
	 else if(PIND==0b11011101)
	{PORTC=0b00010010;
  ca:	b2 e1       	ldi	r27, 0x12	; 18


	PORTD=0b11111101;

	if(PIND==0b11101101)
{	PORTC=0b00100100;
  cc:	14 e2       	ldi	r17, 0x24	; 36
	 else if(PIND==0b01111101)
{	PORTC=64;
	_delay_ms(1000);}


PORTD=0b11111011;
  ce:	7b ef       	ldi	r23, 0xFB	; 251
	_delay_ms(1000);}
	else if(PIND==0b10111011)
{	PORTC=0b00010000;
	_delay_ms(1000);}
	 else if(PIND==0b01111011)
{	PORTC=0b01001001;
  d0:	a9 e4       	ldi	r26, 0x49	; 73
	_delay_ms(1000);}
	 else if(PIND==0b11011011)
{	PORTC=0b00000010;
	_delay_ms(1000);}
	else if(PIND==0b10111011)
{	PORTC=0b00010000;
  d2:	60 e1       	ldi	r22, 0x10	; 16

	if(PIND==0b11101011)
{	PORTC=0b00110000;
	_delay_ms(1000);}
	 else if(PIND==0b11011011)
{	PORTC=0b00000010;
  d4:	42 e0       	ldi	r20, 0x02	; 2


PORTD=0b11111011;

	if(PIND==0b11101011)
{	PORTC=0b00110000;
  d6:	50 e3       	ldi	r21, 0x30	; 48
	DDRD=0X0F;
	PORTC=0XFF;
	while(1)
	{

PORTD=0b11111110;
  d8:	a2 ba       	out	0x12, r10	; 18

	if(PIND==0b11101110)
  da:	80 b3       	in	r24, 0x10	; 16
  dc:	8e 3e       	cpi	r24, 0xEE	; 238
  de:	49 f4       	brne	.+18     	; 0xf2 <main+0x60>
	{  
	PORTC=0b01111001;
  e0:	c5 ba       	out	0x15, r12	; 21
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	97 e2       	ldi	r25, 0x27	; 39
  e6:	f9 01       	movw	r30, r18
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x56>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ee:	d9 f7       	brne	.-10     	; 0xe6 <main+0x54>
  f0:	23 c0       	rjmp	.+70     	; 0x138 <main+0xa6>
	_delay_ms(1000);}
	 else if(PIND==0b11011110)
  f2:	80 b3       	in	r24, 0x10	; 16
  f4:	8e 3d       	cpi	r24, 0xDE	; 222
  f6:	49 f4       	brne	.+18     	; 0x10a <main+0x78>
	{PORTC=0b00011001;
  f8:	d5 ba       	out	0x15, r13	; 21
  fa:	80 e1       	ldi	r24, 0x10	; 16
  fc:	97 e2       	ldi	r25, 0x27	; 39
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x6e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 104:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 106:	d9 f7       	brne	.-10     	; 0xfe <main+0x6c>
 108:	17 c0       	rjmp	.+46     	; 0x138 <main+0xa6>
	_delay_ms(1000);}
	else if(PIND==0b10111110)
 10a:	80 b3       	in	r24, 0x10	; 16
 10c:	8e 3b       	cpi	r24, 0xBE	; 190
 10e:	49 f4       	brne	.+18     	; 0x122 <main+0x90>
{	PORTC=0b01111000;
 110:	e5 ba       	out	0x15, r14	; 21
 112:	80 e1       	ldi	r24, 0x10	; 16
 114:	97 e2       	ldi	r25, 0x27	; 39
 116:	f9 01       	movw	r30, r18
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 11c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 11e:	d9 f7       	brne	.-10     	; 0x116 <main+0x84>
 120:	0b c0       	rjmp	.+22     	; 0x138 <main+0xa6>
	_delay_ms(1000);}
	 else if(PIND==0b01111110)
 122:	80 b3       	in	r24, 0x10	; 16
 124:	8e 37       	cpi	r24, 0x7E	; 126
 126:	41 f4       	brne	.+16     	; 0x138 <main+0xa6>
{	PORTC=0b00110110;
 128:	b5 ba       	out	0x15, r11	; 21
 12a:	80 e1       	ldi	r24, 0x10	; 16
 12c:	97 e2       	ldi	r25, 0x27	; 39
 12e:	f9 01       	movw	r30, r18
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <main+0x9e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 134:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 136:	d9 f7       	brne	.-10     	; 0x12e <main+0x9c>
	_delay_ms(1000);}


	PORTD=0b11111101;
 138:	02 bb       	out	0x12, r16	; 18

	if(PIND==0b11101101)
 13a:	80 b3       	in	r24, 0x10	; 16
 13c:	8d 3e       	cpi	r24, 0xED	; 237
 13e:	49 f4       	brne	.+18     	; 0x152 <main+0xc0>
{	PORTC=0b00100100;
 140:	15 bb       	out	0x15, r17	; 21
 142:	80 e1       	ldi	r24, 0x10	; 16
 144:	97 e2       	ldi	r25, 0x27	; 39
 146:	f9 01       	movw	r30, r18
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0xb6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 14c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14e:	d9 f7       	brne	.-10     	; 0x146 <main+0xb4>
 150:	23 c0       	rjmp	.+70     	; 0x198 <main+0x106>
	_delay_ms(1000);}
	 else if(PIND==0b11011101)
 152:	80 b3       	in	r24, 0x10	; 16
 154:	8d 3d       	cpi	r24, 0xDD	; 221
 156:	49 f4       	brne	.+18     	; 0x16a <main+0xd8>
	{PORTC=0b00010010;
 158:	b5 bb       	out	0x15, r27	; 21
 15a:	80 e1       	ldi	r24, 0x10	; 16
 15c:	97 e2       	ldi	r25, 0x27	; 39
 15e:	f9 01       	movw	r30, r18
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0xce>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 164:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 166:	d9 f7       	brne	.-10     	; 0x15e <main+0xcc>
 168:	17 c0       	rjmp	.+46     	; 0x198 <main+0x106>
	_delay_ms(1000);}
	else if(PIND==0b10111101)
 16a:	80 b3       	in	r24, 0x10	; 16
 16c:	8d 3b       	cpi	r24, 0xBD	; 189
 16e:	49 f4       	brne	.+18     	; 0x182 <main+0xf0>
{	PORTC=0b00000000;
 170:	15 ba       	out	0x15, r1	; 21
 172:	80 e1       	ldi	r24, 0x10	; 16
 174:	97 e2       	ldi	r25, 0x27	; 39
 176:	f9 01       	movw	r30, r18
 178:	31 97       	sbiw	r30, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <main+0xe6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 17c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 17e:	d9 f7       	brne	.-10     	; 0x176 <main+0xe4>
 180:	0b c0       	rjmp	.+22     	; 0x198 <main+0x106>
	_delay_ms(1000);}
	 else if(PIND==0b01111101)
 182:	80 b3       	in	r24, 0x10	; 16
 184:	8d 37       	cpi	r24, 0x7D	; 125
 186:	41 f4       	brne	.+16     	; 0x198 <main+0x106>
{	PORTC=64;
 188:	f5 ba       	out	0x15, r15	; 21
 18a:	80 e1       	ldi	r24, 0x10	; 16
 18c:	97 e2       	ldi	r25, 0x27	; 39
 18e:	f9 01       	movw	r30, r18
 190:	31 97       	sbiw	r30, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <main+0xfe>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 194:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 196:	d9 f7       	brne	.-10     	; 0x18e <main+0xfc>
	_delay_ms(1000);}


PORTD=0b11111011;
 198:	72 bb       	out	0x12, r23	; 18

	if(PIND==0b11101011)
 19a:	80 b3       	in	r24, 0x10	; 16
 19c:	8b 3e       	cpi	r24, 0xEB	; 235
 19e:	49 f4       	brne	.+18     	; 0x1b2 <main+0x120>
{	PORTC=0b00110000;
 1a0:	55 bb       	out	0x15, r21	; 21
 1a2:	80 e1       	ldi	r24, 0x10	; 16
 1a4:	97 e2       	ldi	r25, 0x27	; 39
 1a6:	f9 01       	movw	r30, r18
 1a8:	31 97       	sbiw	r30, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <main+0x116>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ae:	d9 f7       	brne	.-10     	; 0x1a6 <main+0x114>
 1b0:	93 cf       	rjmp	.-218    	; 0xd8 <main+0x46>
	_delay_ms(1000);}
	 else if(PIND==0b11011011)
 1b2:	80 b3       	in	r24, 0x10	; 16
 1b4:	8b 3d       	cpi	r24, 0xDB	; 219
 1b6:	49 f4       	brne	.+18     	; 0x1ca <main+0x138>
{	PORTC=0b00000010;
 1b8:	45 bb       	out	0x15, r20	; 21
 1ba:	80 e1       	ldi	r24, 0x10	; 16
 1bc:	97 e2       	ldi	r25, 0x27	; 39
 1be:	f9 01       	movw	r30, r18
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <main+0x12e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c6:	d9 f7       	brne	.-10     	; 0x1be <main+0x12c>
 1c8:	87 cf       	rjmp	.-242    	; 0xd8 <main+0x46>
	_delay_ms(1000);}
	else if(PIND==0b10111011)
 1ca:	80 b3       	in	r24, 0x10	; 16
 1cc:	8b 3b       	cpi	r24, 0xBB	; 187
 1ce:	49 f4       	brne	.+18     	; 0x1e2 <main+0x150>
{	PORTC=0b00010000;
 1d0:	65 bb       	out	0x15, r22	; 21
 1d2:	80 e1       	ldi	r24, 0x10	; 16
 1d4:	97 e2       	ldi	r25, 0x27	; 39
 1d6:	f9 01       	movw	r30, r18
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <main+0x146>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1de:	d9 f7       	brne	.-10     	; 0x1d6 <main+0x144>
 1e0:	7b cf       	rjmp	.-266    	; 0xd8 <main+0x46>
	_delay_ms(1000);}
	 else if(PIND==0b01111011)
 1e2:	80 b3       	in	r24, 0x10	; 16
 1e4:	8b 37       	cpi	r24, 0x7B	; 123
 1e6:	09 f0       	breq	.+2      	; 0x1ea <main+0x158>
 1e8:	77 cf       	rjmp	.-274    	; 0xd8 <main+0x46>
{	PORTC=0b01001001;
 1ea:	a5 bb       	out	0x15, r26	; 21
 1ec:	80 e1       	ldi	r24, 0x10	; 16
 1ee:	97 e2       	ldi	r25, 0x27	; 39
 1f0:	f9 01       	movw	r30, r18
 1f2:	31 97       	sbiw	r30, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <main+0x160>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1f6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f8:	d9 f7       	brne	.-10     	; 0x1f0 <main+0x15e>
 1fa:	6e cf       	rjmp	.-292    	; 0xd8 <main+0x46>

000001fc <_exit>:
 1fc:	f8 94       	cli

000001fe <__stop_program>:
 1fe:	ff cf       	rjmp	.-2      	; 0x1fe <__stop_program>
