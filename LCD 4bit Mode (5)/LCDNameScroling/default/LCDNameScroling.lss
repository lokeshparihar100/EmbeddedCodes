
LCDNameScroling.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000039c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000039c  00000410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000056  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000591  00000000  00000000  00000496  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000195  00000000  00000000  00000a27  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003bd  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  00000f7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000120  00000000  00000000  00000fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000018e  00000000  00000000  000010fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000108  00000000  00000000  0000128a  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a8 00 	call	0x150	; 0x150 <main>
  8a:	0c 94 cc 01 	jmp	0x398	; 0x398 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <lcd_cmd>:
	lcd_cmd(0x06);
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
  92:	98 2f       	mov	r25, r24
  94:	90 7f       	andi	r25, 0xF0	; 240
  96:	94 60       	ori	r25, 0x04	; 4
  98:	92 bb       	out	0x12, r25	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	2a ef       	ldi	r18, 0xFA	; 250
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	f9 01       	movw	r30, r18
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_cmd+0xe>
	PORTD=(cmd&0xF0)|0x04;
	_delay_ms(1);
	PORTD=PORTD-0X04;
  a4:	92 b3       	in	r25, 0x12	; 18
  a6:	94 50       	subi	r25, 0x04	; 4
  a8:	92 bb       	out	0x12, r25	; 18

	PORTD=((cmd<<4)&0xF0)|0x04;
  aa:	82 95       	swap	r24
  ac:	80 7f       	andi	r24, 0xF0	; 240
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	82 bb       	out	0x12, r24	; 18
  b2:	c9 01       	movw	r24, r18
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <lcd_cmd+0x22>
	_delay_ms(1);
	PORTD=PORTD-0X04;
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	84 50       	subi	r24, 0x04	; 4
  bc:	82 bb       	out	0x12, r24	; 18
}
  be:	08 95       	ret

000000c0 <lcd_initialize>:
#include<avr/io.h>
#include<util/delay.h>
 
void lcd_initialize()
{
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x02);
	lcd_cmd(0x28);
  c8:	88 e2       	ldi	r24, 0x28	; 40
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x0C);
  d0:	8c e0       	ldi	r24, 0x0C	; 12
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x06);
  d8:	86 e0       	ldi	r24, 0x06	; 6
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
	lcd_cmd(0x01);
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
}
  e8:	08 95       	ret

000000ea <lcd_data>:
	_delay_ms(1);
	PORTD=PORTD-0X04;
}

void lcd_data(char data)
{
  ea:	98 2f       	mov	r25, r24
  ec:	90 7f       	andi	r25, 0xF0	; 240
  ee:	95 60       	ori	r25, 0x05	; 5
  f0:	92 bb       	out	0x12, r25	; 18
  f2:	2a ef       	ldi	r18, 0xFA	; 250
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	f9 01       	movw	r30, r18
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <lcd_data+0xe>
	PORTD=(data&0xF0)|0x05;
	_delay_ms(1);
	PORTD=PORTD-0X04;
  fc:	92 b3       	in	r25, 0x12	; 18
  fe:	94 50       	subi	r25, 0x04	; 4
 100:	92 bb       	out	0x12, r25	; 18

	PORTD=((data<<4)&0xF0)|0x05;
 102:	82 95       	swap	r24
 104:	80 7f       	andi	r24, 0xF0	; 240
 106:	85 60       	ori	r24, 0x05	; 5
 108:	82 bb       	out	0x12, r24	; 18
 10a:	c9 01       	movw	r24, r18
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <lcd_data+0x22>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 110:	82 b3       	in	r24, 0x12	; 18
 112:	84 50       	subi	r24, 0x04	; 4
 114:	82 bb       	out	0x12, r24	; 18
}
 116:	08 95       	ret

00000118 <lcd_string>:

void lcd_string(char *ser)
{
 118:	fc 01       	movw	r30, r24
 11a:	4a ef       	ldi	r20, 0xFA	; 250
 11c:	50 e0       	ldi	r21, 0x00	; 0
 11e:	14 c0       	rjmp	.+40     	; 0x148 <lcd_string+0x30>
	PORTD=PORTD-0X04;
}

void lcd_data(char data)
{
	PORTD=(data&0xF0)|0x05;
 120:	82 2f       	mov	r24, r18
 122:	80 7f       	andi	r24, 0xF0	; 240
 124:	85 60       	ori	r24, 0x05	; 5
 126:	82 bb       	out	0x12, r24	; 18
 128:	ca 01       	movw	r24, r20
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <lcd_string+0x12>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 12e:	82 b3       	in	r24, 0x12	; 18
 130:	84 50       	subi	r24, 0x04	; 4
 132:	82 bb       	out	0x12, r24	; 18

	PORTD=((data<<4)&0xF0)|0x05;
 134:	22 95       	swap	r18
 136:	20 7f       	andi	r18, 0xF0	; 240
 138:	25 60       	ori	r18, 0x05	; 5
 13a:	22 bb       	out	0x12, r18	; 18
 13c:	ca 01       	movw	r24, r20
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <lcd_string+0x26>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 142:	82 b3       	in	r24, 0x12	; 18
 144:	84 50       	subi	r24, 0x04	; 4
 146:	82 bb       	out	0x12, r24	; 18
}

void lcd_string(char *ser)
{
	int i=0;
	while(ser[i]!='\0')
 148:	21 91       	ld	r18, Z+
 14a:	22 23       	and	r18, r18
 14c:	49 f7       	brne	.-46     	; 0x120 <lcd_string+0x8>
	{
		lcd_data(ser[i]);
		i++;
	}
}
 14e:	08 95       	ret

00000150 <main>:

void main()
{
 150:	6f 92       	push	r6
 152:	7f 92       	push	r7
 154:	8f 92       	push	r8
 156:	9f 92       	push	r9
 158:	af 92       	push	r10
 15a:	bf 92       	push	r11
 15c:	cf 92       	push	r12
 15e:	df 92       	push	r13
 160:	ef 92       	push	r14
 162:	ff 92       	push	r15
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	df 93       	push	r29
 16a:	cf 93       	push	r28
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	c4 54       	subi	r28, 0x44	; 68
 172:	d0 40       	sbci	r29, 0x00	; 0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	f8 94       	cli
 178:	de bf       	out	0x3e, r29	; 62
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	cd bf       	out	0x3d, r28	; 61
	DDRD=0XFF;
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	81 bb       	out	0x11, r24	; 17
	int i,a[17]={0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F};
 182:	22 e2       	ldi	r18, 0x22	; 34
 184:	8e 01       	movw	r16, r28
 186:	0f 5f       	subi	r16, 0xFF	; 255
 188:	1f 4f       	sbci	r17, 0xFF	; 255
 18a:	d8 01       	movw	r26, r16
 18c:	e2 2f       	mov	r30, r18
 18e:	1d 92       	st	X+, r1
 190:	ea 95       	dec	r30
 192:	e9 f7       	brne	.-6      	; 0x18e <main+0x3e>
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	9a 83       	std	Y+2, r25	; 0x02
 19a:	89 83       	std	Y+1, r24	; 0x01
 19c:	81 e8       	ldi	r24, 0x81	; 129
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	9c 83       	std	Y+4, r25	; 0x04
 1a2:	8b 83       	std	Y+3, r24	; 0x03
 1a4:	82 e8       	ldi	r24, 0x82	; 130
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	9e 83       	std	Y+6, r25	; 0x06
 1aa:	8d 83       	std	Y+5, r24	; 0x05
 1ac:	83 e8       	ldi	r24, 0x83	; 131
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	98 87       	std	Y+8, r25	; 0x08
 1b2:	8f 83       	std	Y+7, r24	; 0x07
 1b4:	84 e8       	ldi	r24, 0x84	; 132
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	9a 87       	std	Y+10, r25	; 0x0a
 1ba:	89 87       	std	Y+9, r24	; 0x09
 1bc:	85 e8       	ldi	r24, 0x85	; 133
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	9c 87       	std	Y+12, r25	; 0x0c
 1c2:	8b 87       	std	Y+11, r24	; 0x0b
 1c4:	86 e8       	ldi	r24, 0x86	; 134
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	9e 87       	std	Y+14, r25	; 0x0e
 1ca:	8d 87       	std	Y+13, r24	; 0x0d
 1cc:	87 e8       	ldi	r24, 0x87	; 135
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	98 8b       	std	Y+16, r25	; 0x10
 1d2:	8f 87       	std	Y+15, r24	; 0x0f
 1d4:	88 e8       	ldi	r24, 0x88	; 136
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	9a 8b       	std	Y+18, r25	; 0x12
 1da:	89 8b       	std	Y+17, r24	; 0x11
 1dc:	89 e8       	ldi	r24, 0x89	; 137
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	9c 8b       	std	Y+20, r25	; 0x14
 1e2:	8b 8b       	std	Y+19, r24	; 0x13
 1e4:	8a e8       	ldi	r24, 0x8A	; 138
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	9e 8b       	std	Y+22, r25	; 0x16
 1ea:	8d 8b       	std	Y+21, r24	; 0x15
 1ec:	8b e8       	ldi	r24, 0x8B	; 139
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	98 8f       	std	Y+24, r25	; 0x18
 1f2:	8f 8b       	std	Y+23, r24	; 0x17
 1f4:	8c e8       	ldi	r24, 0x8C	; 140
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	9a 8f       	std	Y+26, r25	; 0x1a
 1fa:	89 8f       	std	Y+25, r24	; 0x19
 1fc:	8d e8       	ldi	r24, 0x8D	; 141
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	9c 8f       	std	Y+28, r25	; 0x1c
 202:	8b 8f       	std	Y+27, r24	; 0x1b
 204:	8e e8       	ldi	r24, 0x8E	; 142
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	9e 8f       	std	Y+30, r25	; 0x1e
 20a:	8d 8f       	std	Y+29, r24	; 0x1d
 20c:	8f e8       	ldi	r24, 0x8F	; 143
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	98 a3       	std	Y+32, r25	; 0x20
 212:	8f 8f       	std	Y+31, r24	; 0x1f
	int b[17]={0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xcA,0xcB,0xcC,0xcD,0xcE,0xcF};
 214:	fe 01       	movw	r30, r28
 216:	b3 96       	adiw	r30, 0x23	; 35
 218:	df 01       	movw	r26, r30
 21a:	1d 92       	st	X+, r1
 21c:	2a 95       	dec	r18
 21e:	e9 f7       	brne	.-6      	; 0x21a <main+0xca>
 220:	80 ec       	ldi	r24, 0xC0	; 192
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	9c a3       	std	Y+36, r25	; 0x24
 226:	8b a3       	std	Y+35, r24	; 0x23
 228:	81 ec       	ldi	r24, 0xC1	; 193
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	9e a3       	std	Y+38, r25	; 0x26
 22e:	8d a3       	std	Y+37, r24	; 0x25
 230:	82 ec       	ldi	r24, 0xC2	; 194
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	98 a7       	std	Y+40, r25	; 0x28
 236:	8f a3       	std	Y+39, r24	; 0x27
 238:	83 ec       	ldi	r24, 0xC3	; 195
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	9a a7       	std	Y+42, r25	; 0x2a
 23e:	89 a7       	std	Y+41, r24	; 0x29
 240:	84 ec       	ldi	r24, 0xC4	; 196
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	9c a7       	std	Y+44, r25	; 0x2c
 246:	8b a7       	std	Y+43, r24	; 0x2b
 248:	85 ec       	ldi	r24, 0xC5	; 197
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	9e a7       	std	Y+46, r25	; 0x2e
 24e:	8d a7       	std	Y+45, r24	; 0x2d
 250:	86 ec       	ldi	r24, 0xC6	; 198
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	98 ab       	std	Y+48, r25	; 0x30
 256:	8f a7       	std	Y+47, r24	; 0x2f
 258:	87 ec       	ldi	r24, 0xC7	; 199
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	9a ab       	std	Y+50, r25	; 0x32
 25e:	89 ab       	std	Y+49, r24	; 0x31
 260:	88 ec       	ldi	r24, 0xC8	; 200
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	9c ab       	std	Y+52, r25	; 0x34
 266:	8b ab       	std	Y+51, r24	; 0x33
 268:	89 ec       	ldi	r24, 0xC9	; 201
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	9e ab       	std	Y+54, r25	; 0x36
 26e:	8d ab       	std	Y+53, r24	; 0x35
 270:	8a ec       	ldi	r24, 0xCA	; 202
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	98 af       	std	Y+56, r25	; 0x38
 276:	8f ab       	std	Y+55, r24	; 0x37
 278:	8b ec       	ldi	r24, 0xCB	; 203
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	9a af       	std	Y+58, r25	; 0x3a
 27e:	89 af       	std	Y+57, r24	; 0x39
 280:	8c ec       	ldi	r24, 0xCC	; 204
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	9c af       	std	Y+60, r25	; 0x3c
 286:	8b af       	std	Y+59, r24	; 0x3b
 288:	8d ec       	ldi	r24, 0xCD	; 205
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	9e af       	std	Y+62, r25	; 0x3e
 28e:	8d af       	std	Y+61, r24	; 0x3d
 290:	fe 01       	movw	r30, r28
 292:	ff 96       	adiw	r30, 0x3f	; 63
 294:	8e ec       	ldi	r24, 0xCE	; 206
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	91 83       	std	Z+1, r25	; 0x01
 29a:	80 83       	st	Z, r24
 29c:	8f ec       	ldi	r24, 0xCF	; 207
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	fe 01       	movw	r30, r28
 2a2:	ef 5b       	subi	r30, 0xBF	; 191
 2a4:	ff 4f       	sbci	r31, 0xFF	; 255
 2a6:	91 83       	std	Z+1, r25	; 0x01
 2a8:	80 83       	st	Z, r24
	lcd_initialize();
 2aa:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_initialize>
 2ae:	cc 24       	eor	r12, r12
 2b0:	dd 24       	eor	r13, r13
	while(1)
	{ 
	  for(i=0;i<16;i++)
	  {
		lcd_cmd(a[i]);
 2b2:	48 01       	movw	r8, r16
 2b4:	4a ef       	ldi	r20, 0xFA	; 250
 2b6:	e4 2e       	mov	r14, r20
 2b8:	f1 2c       	mov	r15, r1
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xF0)|0x04;
 2ba:	38 ea       	ldi	r19, 0xA8	; 168
 2bc:	a3 2e       	mov	r10, r19
 2be:	31 e6       	ldi	r19, 0x61	; 97
 2c0:	b3 2e       	mov	r11, r19
 2c2:	24 e1       	ldi	r18, 0x14	; 20
 2c4:	62 2e       	mov	r6, r18
	_delay_ms(1);
	PORTD=PORTD-0X04;

	PORTD=((cmd<<4)&0xF0)|0x04;
 2c6:	94 e0       	ldi	r25, 0x04	; 4
 2c8:	79 2e       	mov	r7, r25
	lcd_initialize();
	while(1)
	{ 
	  for(i=0;i<16;i++)
	  {
		lcd_cmd(a[i]);
 2ca:	86 01       	movw	r16, r12
 2cc:	00 0f       	add	r16, r16
 2ce:	11 1f       	adc	r17, r17
 2d0:	08 0d       	add	r16, r8
 2d2:	19 1d       	adc	r17, r9
 2d4:	f8 01       	movw	r30, r16
 2d6:	90 81       	ld	r25, Z
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xF0)|0x04;
 2d8:	89 2f       	mov	r24, r25
 2da:	80 7f       	andi	r24, 0xF0	; 240
 2dc:	84 60       	ori	r24, 0x04	; 4
 2de:	82 bb       	out	0x12, r24	; 18
 2e0:	f7 01       	movw	r30, r14
 2e2:	31 97       	sbiw	r30, 0x01	; 1
 2e4:	f1 f7       	brne	.-4      	; 0x2e2 <main+0x192>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 2e6:	82 b3       	in	r24, 0x12	; 18
 2e8:	84 50       	subi	r24, 0x04	; 4
 2ea:	82 bb       	out	0x12, r24	; 18

	PORTD=((cmd<<4)&0xF0)|0x04;
 2ec:	92 95       	swap	r25
 2ee:	90 7f       	andi	r25, 0xF0	; 240
 2f0:	94 60       	ori	r25, 0x04	; 4
 2f2:	92 bb       	out	0x12, r25	; 18
 2f4:	c7 01       	movw	r24, r14
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <main+0x1a6>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 2fa:	82 b3       	in	r24, 0x12	; 18
 2fc:	84 50       	subi	r24, 0x04	; 4
 2fe:	82 bb       	out	0x12, r24	; 18
	while(1)
	{ 
	  for(i=0;i<16;i++)
	  {
		lcd_cmd(a[i]);
		lcd_string("LOKESH");
 300:	80 e6       	ldi	r24, 0x60	; 96
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 8c 00 	call	0x118	; 0x118 <lcd_string>
 308:	c7 01       	movw	r24, r14
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <main+0x1ba>
		_delay_ms(1);
		lcd_cmd(b[i]);
 30e:	d8 01       	movw	r26, r16
 310:	92 96       	adiw	r26, 0x22	; 34
 312:	9c 91       	ld	r25, X
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xF0)|0x04;
 314:	89 2f       	mov	r24, r25
 316:	80 7f       	andi	r24, 0xF0	; 240
 318:	84 60       	ori	r24, 0x04	; 4
 31a:	82 bb       	out	0x12, r24	; 18
 31c:	f7 01       	movw	r30, r14
 31e:	31 97       	sbiw	r30, 0x01	; 1
 320:	f1 f7       	brne	.-4      	; 0x31e <main+0x1ce>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 322:	82 b3       	in	r24, 0x12	; 18
 324:	84 50       	subi	r24, 0x04	; 4
 326:	82 bb       	out	0x12, r24	; 18

	PORTD=((cmd<<4)&0xF0)|0x04;
 328:	92 95       	swap	r25
 32a:	90 7f       	andi	r25, 0xF0	; 240
 32c:	94 60       	ori	r25, 0x04	; 4
 32e:	92 bb       	out	0x12, r25	; 18
 330:	c7 01       	movw	r24, r14
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <main+0x1e2>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 336:	82 b3       	in	r24, 0x12	; 18
 338:	84 50       	subi	r24, 0x04	; 4
 33a:	82 bb       	out	0x12, r24	; 18
	  {
		lcd_cmd(a[i]);
		lcd_string("LOKESH");
		_delay_ms(1);
		lcd_cmd(b[i]);
		lcd_string("PARIHAR");
 33c:	87 e6       	ldi	r24, 0x67	; 103
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 8c 00 	call	0x118	; 0x118 <lcd_string>
 344:	c5 01       	movw	r24, r10
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <main+0x1f6>
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xF0)|0x04;
 34a:	62 ba       	out	0x12, r6	; 18
 34c:	c7 01       	movw	r24, r14
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <main+0x1fe>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 352:	82 b3       	in	r24, 0x12	; 18
 354:	84 50       	subi	r24, 0x04	; 4
 356:	82 bb       	out	0x12, r24	; 18

	PORTD=((cmd<<4)&0xF0)|0x04;
 358:	72 ba       	out	0x12, r7	; 18
 35a:	c7 01       	movw	r24, r14
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	f1 f7       	brne	.-4      	; 0x35c <main+0x20c>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 360:	82 b3       	in	r24, 0x12	; 18
 362:	84 50       	subi	r24, 0x04	; 4
 364:	82 bb       	out	0x12, r24	; 18
	lcd_cmd(0x01);
}

void lcd_cmd(char cmd)
{
	PORTD=(cmd&0xF0)|0x04;
 366:	72 ba       	out	0x12, r7	; 18
 368:	c7 01       	movw	r24, r14
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x21a>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 36e:	82 b3       	in	r24, 0x12	; 18
 370:	84 50       	subi	r24, 0x04	; 4
 372:	82 bb       	out	0x12, r24	; 18

	PORTD=((cmd<<4)&0xF0)|0x04;
 374:	62 ba       	out	0x12, r6	; 18
 376:	c7 01       	movw	r24, r14
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <main+0x228>
	_delay_ms(1);
	PORTD=PORTD-0X04;
 37c:	82 b3       	in	r24, 0x12	; 18
 37e:	84 50       	subi	r24, 0x04	; 4
 380:	82 bb       	out	0x12, r24	; 18
	int i,a[17]={0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F};
	int b[17]={0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xcA,0xcB,0xcC,0xcD,0xcE,0xcF};
	lcd_initialize();
	while(1)
	{ 
	  for(i=0;i<16;i++)
 382:	08 94       	sec
 384:	c1 1c       	adc	r12, r1
 386:	d1 1c       	adc	r13, r1
 388:	b0 e1       	ldi	r27, 0x10	; 16
 38a:	cb 16       	cp	r12, r27
 38c:	d1 04       	cpc	r13, r1
 38e:	0c f4       	brge	.+2      	; 0x392 <main+0x242>
 390:	9c cf       	rjmp	.-200    	; 0x2ca <main+0x17a>
 392:	cc 24       	eor	r12, r12
 394:	dd 24       	eor	r13, r13
 396:	99 cf       	rjmp	.-206    	; 0x2ca <main+0x17a>

00000398 <_exit>:
 398:	f8 94       	cli

0000039a <__stop_program>:
 39a:	ff cf       	rjmp	.-2      	; 0x39a <__stop_program>
